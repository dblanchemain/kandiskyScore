declare name        "radioFrance29";
declare version     "1.0";
declare author      "D.Blanchemain";
declare license     "BSD";
declare copyright   "(c)D.Blanchemain 2023";
import("stdfaust.lib");
Matrix(N,M) =_<: par(out, M, *(Fader(1,out): si.smoo)) :> par(out, M, _)
with {
tabSpeakerX(0)=-0.71;
tabSpeakerY(0)=0;
tabSpeakerZ(0)=1;
tabSpeakerD(0)=1.23;
tabSpeakerX(1)=-0.25;
tabSpeakerY(1)=0;
tabSpeakerZ(1)=1;
tabSpeakerD(1)=1.03;
tabSpeakerX(2)=0.18;
tabSpeakerY(2)=0;
tabSpeakerZ(2)=1;
tabSpeakerD(2)=1.02;
tabSpeakerX(3)=0.68;
tabSpeakerY(3)=0;
tabSpeakerZ(3)=1;
tabSpeakerD(3)=1.21;
tabSpeakerX(4)=0.99;
tabSpeakerY(4)=0;
tabSpeakerZ(4)=0.69;
tabSpeakerD(4)=1.21;
tabSpeakerX(5)=1;
tabSpeakerY(5)=0;
tabSpeakerZ(5)=0.3;
tabSpeakerD(5)=1.04;
tabSpeakerX(6)=1;
tabSpeakerY(6)=0;
tabSpeakerZ(6)=-0.2;
tabSpeakerD(6)=1.02;
tabSpeakerX(7)=1;
tabSpeakerY(7)=0;
tabSpeakerZ(7)=-0.71;
tabSpeakerD(7)=1.23;
tabSpeakerX(8)=0.71;
tabSpeakerY(8)=0;
tabSpeakerZ(8)=-1;
tabSpeakerD(8)=1.23;
tabSpeakerX(9)=0.17;
tabSpeakerY(9)=0;
tabSpeakerZ(9)=-1;
tabSpeakerD(9)=1.01;
tabSpeakerX(10)=-0.25;
tabSpeakerY(10)=0;
tabSpeakerZ(10)=-1;
tabSpeakerD(10)=1.03;
tabSpeakerX(11)=-0.71;
tabSpeakerY(11)=0;
tabSpeakerZ(11)=-1;
tabSpeakerD(11)=1.23;
tabSpeakerX(12)=-1;
tabSpeakerY(12)=0;
tabSpeakerZ(12)=-0.69;
tabSpeakerD(12)=1.21;
tabSpeakerX(13)=-1;
tabSpeakerY(13)=0;
tabSpeakerZ(13)=-0.2;
tabSpeakerD(13)=1.02;
tabSpeakerX(14)=-1;
tabSpeakerY(14)=0;
tabSpeakerZ(14)=0.28;
tabSpeakerD(14)=1.04;
tabSpeakerX(15)=-1;
tabSpeakerY(15)=0;
tabSpeakerZ(15)=0.68;
tabSpeakerD(15)=1.21;
tabSpeakerX(16)=-0.45;
tabSpeakerY(16)=0.6;
tabSpeakerZ(16)=1;
tabSpeakerD(16)=1.25;
tabSpeakerX(17)=0.42;
tabSpeakerY(17)=0.6;
tabSpeakerZ(17)=0.99;
tabSpeakerD(17)=1.23;
tabSpeakerX(18)=1;
tabSpeakerY(18)=0.6;
tabSpeakerZ(18)=0.4;
tabSpeakerD(18)=1.23;
tabSpeakerX(19)=1;
tabSpeakerY(19)=0.6;
tabSpeakerZ(19)=-0.42;
tabSpeakerD(19)=1.24;
tabSpeakerX(20)=0.4;
tabSpeakerY(20)=0.6;
tabSpeakerZ(20)=-1;
tabSpeakerD(20)=1.23;
tabSpeakerX(21)=-0.47;
tabSpeakerY(21)=0.6;
tabSpeakerZ(21)=-1;
tabSpeakerD(21)=1.26;
tabSpeakerX(22)=-1;
tabSpeakerY(22)=0.6;
tabSpeakerZ(22)=-0.41;
tabSpeakerD(22)=1.24;
tabSpeakerX(23)=-1;
tabSpeakerY(23)=0.6;
tabSpeakerZ(23)=0.39;
tabSpeakerD(23)=1.23;
tabSpeakerX(24)=-0.36;
tabSpeakerY(24)=1;
tabSpeakerZ(24)=0.34;
tabSpeakerD(24)=1.12;
tabSpeakerX(25)=0.33;
tabSpeakerY(25)=1;
tabSpeakerZ(25)=0.35;
tabSpeakerD(25)=1.11;
tabSpeakerX(26)=0.34;
tabSpeakerY(26)=1;
tabSpeakerZ(26)=-0.36;
tabSpeakerD(26)=1.12;
tabSpeakerX(27)=-0.36;
tabSpeakerY(27)=1;
tabSpeakerZ(27)=-0.35;
tabSpeakerD(27)=1.12;
tabSpeakerX(28)=0;
tabSpeakerY(28)=1;
tabSpeakerZ(28)=-0.01;
tabSpeakerD(28)=1.00;
dtencGen(in, out) = sqrt(pow(tabSpeakerX(out)-x(in),2) + pow(tabSpeakerY(out)+y(in),2) + pow(tabSpeakerZ(out)-z(in),2));
hspot = hslider("Hot Spot",-20,-50,0,1);
dgain(in, out) = ba.db2linear((hspot/tabSpeakerD(out))*dtencGen(in,out));
x(i) = hslider("/X%i",0,-1,1,0.01);
y(i) = hslider("/Y%i",0,-1,1,0.01);
z(i) = hslider("/Z%i",0,-1,1,0.01);
Fader(in,out)= vgroup("[1]Input %2in",dgain(in,out)*cdistance);
cdistance(in)=hslider("dt",1,0,1,0.1):si.smoo;
paramDistance(x)=hgroup("[2]Distance",x);
};
process =_,_:> Matrix(1,29);
