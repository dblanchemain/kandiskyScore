declare name        "zkm43";
declare version     "1.0";
declare author      "D.Blanchemain";
declare license     "BSD";
declare copyright   "(c)D.Blanchemain 2023";
import("stdfaust.lib");
Matrix(N,M) =_<: par(out, M, *(Fader(1,out): si.smoo)) :> par(out, M, _)
with {
tabSpeakerX(0)=0;
tabSpeakerY(0)=-1;
tabSpeakerZ(0)=-1;
tabSpeakerD(0)=1.41;
tabSpeakerX(1)=-0.38;
tabSpeakerY(1)=-1;
tabSpeakerZ(1)=-0.95;
tabSpeakerD(1)=1.43;
tabSpeakerX(2)=-0.77;
tabSpeakerY(2)=-1;
tabSpeakerZ(2)=-0.72;
tabSpeakerD(2)=1.45;
tabSpeakerX(3)=-0.96;
tabSpeakerY(3)=-1;
tabSpeakerZ(3)=-0.37;
tabSpeakerD(3)=1.43;
tabSpeakerX(4)=-0.96;
tabSpeakerY(4)=-1;
tabSpeakerZ(4)=0.17;
tabSpeakerD(4)=1.40;
tabSpeakerX(5)=-0.81;
tabSpeakerY(5)=-1;
tabSpeakerZ(5)=0.63;
tabSpeakerD(5)=1.43;
tabSpeakerX(6)=-0.43;
tabSpeakerY(6)=-1;
tabSpeakerZ(6)=0.93;
tabSpeakerD(6)=1.43;
tabSpeakerX(7)=-0.02;
tabSpeakerY(7)=-1;
tabSpeakerZ(7)=1;
tabSpeakerD(7)=1.41;
tabSpeakerX(8)=0.47;
tabSpeakerY(8)=-1;
tabSpeakerZ(8)=0.92;
tabSpeakerD(8)=1.44;
tabSpeakerX(9)=0.78;
tabSpeakerY(9)=-1;
tabSpeakerZ(9)=0.65;
tabSpeakerD(9)=1.43;
tabSpeakerX(10)=1;
tabSpeakerY(10)=-1;
tabSpeakerZ(10)=0.17;
tabSpeakerD(10)=1.42;
tabSpeakerX(11)=0.99;
tabSpeakerY(11)=-1;
tabSpeakerZ(11)=-0.33;
tabSpeakerD(11)=1.45;
tabSpeakerX(12)=0.73;
tabSpeakerY(12)=-1;
tabSpeakerZ(12)=-0.72;
tabSpeakerD(12)=1.43;
tabSpeakerX(13)=0.38;
tabSpeakerY(13)=-1;
tabSpeakerZ(13)=-0.94;
tabSpeakerD(13)=1.42;
tabSpeakerX(14)=-0.06;
tabSpeakerY(14)=-0.5;
tabSpeakerZ(14)=-0.68;
tabSpeakerD(14)=0.85;
tabSpeakerX(15)=-0.37;
tabSpeakerY(15)=-0.5;
tabSpeakerZ(15)=-0.57;
tabSpeakerD(15)=0.84;
tabSpeakerX(16)=-0.6;
tabSpeakerY(16)=-0.5;
tabSpeakerZ(16)=-0.28;
tabSpeakerD(16)=0.83;
tabSpeakerX(17)=-0.68;
tabSpeakerY(17)=-0.5;
tabSpeakerZ(17)=0;
tabSpeakerD(17)=0.84;
tabSpeakerX(18)=-0.54;
tabSpeakerY(18)=-0.5;
tabSpeakerZ(18)=0.34;
tabSpeakerD(18)=0.81;
tabSpeakerX(19)=-0.38;
tabSpeakerY(19)=-0.5;
tabSpeakerZ(19)=0.52;
tabSpeakerD(19)=0.82;
tabSpeakerX(20)=-0.19;
tabSpeakerY(20)=-0.5;
tabSpeakerZ(20)=0.66;
tabSpeakerD(20)=0.85;
tabSpeakerX(21)=0.09;
tabSpeakerY(21)=-0.5;
tabSpeakerZ(21)=0.62;
tabSpeakerD(21)=0.80;
tabSpeakerX(22)=0.27;
tabSpeakerY(22)=-0.5;
tabSpeakerZ(22)=0.51;
tabSpeakerD(22)=0.76;
tabSpeakerX(23)=0.57;
tabSpeakerY(23)=-0.5;
tabSpeakerZ(23)=0.26;
tabSpeakerD(23)=0.80;
tabSpeakerX(24)=0.57;
tabSpeakerY(24)=-0.5;
tabSpeakerZ(24)=-0.04;
tabSpeakerD(24)=0.76;
tabSpeakerX(25)=0.39;
tabSpeakerY(25)=-0.5;
tabSpeakerZ(25)=-0.39;
tabSpeakerD(25)=0.74;
tabSpeakerX(26)=0.08;
tabSpeakerY(26)=-0.5;
tabSpeakerZ(26)=-0.42;
tabSpeakerD(26)=0.66;
tabSpeakerX(27)=0.19;
tabSpeakerY(27)=0;
tabSpeakerZ(27)=-0.41;
tabSpeakerD(27)=0.45;
tabSpeakerX(28)=-0.06;
tabSpeakerY(28)=0;
tabSpeakerZ(28)=-0.43;
tabSpeakerD(28)=0.43;
tabSpeakerX(29)=-0.3;
tabSpeakerY(29)=0;
tabSpeakerZ(29)=-0.29;
tabSpeakerD(29)=0.42;
tabSpeakerX(30)=-0.4;
tabSpeakerY(30)=0;
tabSpeakerZ(30)=0.01;
tabSpeakerD(30)=0.40;
tabSpeakerX(31)=-0.31;
tabSpeakerY(31)=0;
tabSpeakerZ(31)=0.27;
tabSpeakerD(31)=0.41;
tabSpeakerX(32)=-0.1;
tabSpeakerY(32)=0;
tabSpeakerZ(32)=0.45;
tabSpeakerD(32)=0.46;
tabSpeakerX(33)=0.22;
tabSpeakerY(33)=0;
tabSpeakerZ(33)=0.42;
tabSpeakerD(33)=0.47;
tabSpeakerX(34)=0.43;
tabSpeakerY(34)=0;
tabSpeakerZ(34)=0.13;
tabSpeakerD(34)=0.45;
tabSpeakerX(35)=0.39;
tabSpeakerY(35)=0;
tabSpeakerZ(35)=-0.19;
tabSpeakerD(35)=0.43;
tabSpeakerX(36)=-0.19;
tabSpeakerY(36)=0.48;
tabSpeakerZ(36)=-0.22;
tabSpeakerD(36)=0.56;
tabSpeakerX(37)=-0.31;
tabSpeakerY(37)=0.48;
tabSpeakerZ(37)=0.1;
tabSpeakerD(37)=0.58;
tabSpeakerX(38)=-0.07;
tabSpeakerY(38)=0.48;
tabSpeakerZ(38)=0.36;
tabSpeakerD(38)=0.60;
tabSpeakerX(39)=0.25;
tabSpeakerY(39)=0.48;
tabSpeakerZ(39)=0.28;
tabSpeakerD(39)=0.61;
tabSpeakerX(40)=0.32;
tabSpeakerY(40)=0.48;
tabSpeakerZ(40)=-0.07;
tabSpeakerD(40)=0.58;
tabSpeakerX(41)=0.1;
tabSpeakerY(41)=0.48;
tabSpeakerZ(41)=-0.29;
tabSpeakerD(41)=0.57;
tabSpeakerX(42)=0;
tabSpeakerY(42)=1;
tabSpeakerZ(42)=0;
tabSpeakerD(42)=1.00;
dtencGen(in, out) = sqrt(pow(tabSpeakerX(out)-x(in),2) + pow(tabSpeakerY(out)+y(in),2) + pow(tabSpeakerZ(out)-z(in),2));
hspot = hslider("Hot Spot",-20,-50,0,1);
dgain(in, out) = ba.db2linear((hspot/tabSpeakerD(out))*dtencGen(in,out));
x(i) = hslider("/X%i",0,-1,1,0.01);
y(i) = hslider("/Y%i",0,-1,1,0.01);
z(i) = hslider("/Z%i",0,-1,1,0.01);
Fader(in,out)= vgroup("[1]Input %2in",dgain(in,out)*cdistance);
cdistance(in)=hslider("dt",1,0,1,0.1):si.smoo;
paramDistance(x)=hgroup("[2]Distance",x);
};
process =_,_:> Matrix(1,43);
