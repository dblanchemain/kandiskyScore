declare name        "zkm23";
declare version     "1.0";
declare author      "D.Blanchemain";
declare license     "BSD";
declare copyright   "(c)D.Blanchemain 2023";
import("stdfaust.lib");
Matrix(N,M) =_<: par(out, M, *(Fader(1,out): si.smoo)) :> par(out, M, _)
with {
tabSpeakerX(0)=0;
tabSpeakerY(0)=-0.6;
tabSpeakerZ(0)=-1;
tabSpeakerD(0)=1.17;
tabSpeakerX(1)=-0.58;
tabSpeakerY(1)=-0.6;
tabSpeakerZ(1)=-0.8;
tabSpeakerD(1)=1.16;
tabSpeakerX(2)=-0.9;
tabSpeakerY(2)=-0.6;
tabSpeakerZ(2)=-0.4;
tabSpeakerD(2)=1.15;
tabSpeakerX(3)=-0.9;
tabSpeakerY(3)=-0.6;
tabSpeakerZ(3)=0.4;
tabSpeakerD(3)=1.15;
tabSpeakerX(4)=-0.58;
tabSpeakerY(4)=-0.6;
tabSpeakerZ(4)=0.78;
tabSpeakerD(4)=1.14;
tabSpeakerX(5)=0;
tabSpeakerY(5)=-0.6;
tabSpeakerZ(5)=1;
tabSpeakerD(5)=1.17;
tabSpeakerX(6)=0.59;
tabSpeakerY(6)=-0.6;
tabSpeakerZ(6)=0.81;
tabSpeakerD(6)=1.17;
tabSpeakerX(7)=0.9;
tabSpeakerY(7)=-0.6;
tabSpeakerZ(7)=0.4;
tabSpeakerD(7)=1.15;
tabSpeakerX(8)=0.9;
tabSpeakerY(8)=-0.6;
tabSpeakerZ(8)=-0.4;
tabSpeakerD(8)=1.15;
tabSpeakerX(9)=0.58;
tabSpeakerY(9)=-0.6;
tabSpeakerZ(9)=-0.8;
tabSpeakerD(9)=1.16;
tabSpeakerX(10)=-0.28;
tabSpeakerY(10)=0;
tabSpeakerZ(10)=-0.68;
tabSpeakerD(10)=0.74;
tabSpeakerX(11)=-0.7;
tabSpeakerY(11)=0;
tabSpeakerZ(11)=-0.36;
tabSpeakerD(11)=0.79;
tabSpeakerX(12)=-0.7;
tabSpeakerY(12)=0;
tabSpeakerZ(12)=0.36;
tabSpeakerD(12)=0.79;
tabSpeakerX(13)=-0.28;
tabSpeakerY(13)=0;
tabSpeakerZ(13)=0.68;
tabSpeakerD(13)=0.74;
tabSpeakerX(14)=0.31;
tabSpeakerY(14)=0;
tabSpeakerZ(14)=0.65;
tabSpeakerD(14)=0.72;
tabSpeakerX(15)=0.7;
tabSpeakerY(15)=0;
tabSpeakerZ(15)=0.38;
tabSpeakerD(15)=0.80;
tabSpeakerX(16)=0.7;
tabSpeakerY(16)=0;
tabSpeakerZ(16)=-0.38;
tabSpeakerD(16)=0.80;
tabSpeakerX(17)=0.28;
tabSpeakerY(17)=0;
tabSpeakerZ(17)=-0.67;
tabSpeakerD(17)=0.73;
tabSpeakerX(18)=0;
tabSpeakerY(18)=0.6;
tabSpeakerZ(18)=-0.5;
tabSpeakerD(18)=0.78;
tabSpeakerX(19)=-0.52;
tabSpeakerY(19)=0.6;
tabSpeakerZ(19)=0;
tabSpeakerD(19)=0.79;
tabSpeakerX(20)=0;
tabSpeakerY(20)=0.6;
tabSpeakerZ(20)=0.5;
tabSpeakerD(20)=0.78;
tabSpeakerX(21)=0.5;
tabSpeakerY(21)=0.6;
tabSpeakerZ(21)=0;
tabSpeakerD(21)=0.78;
tabSpeakerX(22)=0;
tabSpeakerY(22)=1;
tabSpeakerZ(22)=0;
tabSpeakerD(22)=1.00;
dtencGen(in, out) = sqrt(pow(tabSpeakerX(out)-x(in),2) + pow(tabSpeakerY(out)+y(in),2) + pow(tabSpeakerZ(out)-z(in),2));
hspot = hslider("Hot Spot",-20,-50,0,1);
dgain(in, out) = ba.db2linear((hspot/tabSpeakerD(out))*dtencGen(in,out));
x(i) = hslider("/X%i",0,-1,1,0.01);
y(i) = hslider("/Y%i",0,-1,1,0.01);
z(i) = hslider("/Z%i",0,-1,1,0.01);
Fader(in,out)= vgroup("[1]Input %2in",dgain(in,out)*cdistance);
cdistance(in)=hslider("dt",1,0,1,0.1):si.smoo;
paramDistance(x)=hgroup("[2]Distance",x);
};
process =_,_:> Matrix(1,23);
