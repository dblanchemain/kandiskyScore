declare name        "satosphere31";
declare version     "1.0";
declare author      "D.Blanchemain";
declare license     "BSD";
declare copyright   "(c)D.Blanchemain 2023";
import("stdfaust.lib");
Matrix(N,M) =_<: par(out, M, *(Fader(1,out): si.smoo)) :> par(out, M, _)
with {
tabSpeakerX(0)=0;
tabSpeakerY(0)=1;
tabSpeakerZ(0)=0;
tabSpeakerD(0)=1.00;
tabSpeakerX(1)=-0.09;
tabSpeakerY(1)=0.6;
tabSpeakerZ(1)=0.35;
tabSpeakerD(1)=0.70;
tabSpeakerX(2)=0.2;
tabSpeakerY(2)=0.6;
tabSpeakerZ(2)=0.22;
tabSpeakerD(2)=0.67;
tabSpeakerX(3)=0.29;
tabSpeakerY(3)=0.6;
tabSpeakerZ(3)=-0.09;
tabSpeakerD(3)=0.67;
tabSpeakerX(4)=0.04;
tabSpeakerY(4)=0.6;
tabSpeakerZ(4)=-0.34;
tabSpeakerD(4)=0.69;
tabSpeakerX(5)=-0.28;
tabSpeakerY(5)=0.6;
tabSpeakerZ(5)=-0.25;
tabSpeakerD(5)=0.71;
tabSpeakerX(6)=-0.38;
tabSpeakerY(6)=0.6;
tabSpeakerZ(6)=0.08;
tabSpeakerD(6)=0.71;
tabSpeakerX(7)=-0.02;
tabSpeakerY(7)=-0.25;
tabSpeakerZ(7)=0.65;
tabSpeakerD(7)=0.70;
tabSpeakerX(8)=-0.36;
tabSpeakerY(8)=-0.25;
tabSpeakerZ(8)=0.55;
tabSpeakerD(8)=0.70;
tabSpeakerX(9)=-0.58;
tabSpeakerY(9)=-0.25;
tabSpeakerZ(9)=0.35;
tabSpeakerD(9)=0.72;
tabSpeakerX(10)=-0.7;
tabSpeakerY(10)=-0.25;
tabSpeakerZ(10)=0;
tabSpeakerD(10)=0.74;
tabSpeakerX(11)=-0.6;
tabSpeakerY(11)=-0.25;
tabSpeakerZ(11)=-0.35;
tabSpeakerD(11)=0.74;
tabSpeakerX(12)=-0.39;
tabSpeakerY(12)=-0.25;
tabSpeakerZ(12)=-0.55;
tabSpeakerD(12)=0.72;
tabSpeakerX(13)=-0.01;
tabSpeakerY(13)=-0.25;
tabSpeakerZ(13)=-0.64;
tabSpeakerD(13)=0.69;
tabSpeakerX(14)=0.29;
tabSpeakerY(14)=-0.25;
tabSpeakerZ(14)=-0.54;
tabSpeakerD(14)=0.66;
tabSpeakerX(15)=0.53;
tabSpeakerY(15)=-0.25;
tabSpeakerZ(15)=-0.35;
tabSpeakerD(15)=0.68;
tabSpeakerX(16)=0.64;
tabSpeakerY(16)=-0.25;
tabSpeakerZ(16)=0;
tabSpeakerD(16)=0.69;
tabSpeakerX(17)=0.53;
tabSpeakerY(17)=-0.25;
tabSpeakerZ(17)=0.34;
tabSpeakerD(17)=0.68;
tabSpeakerX(18)=0.33;
tabSpeakerY(18)=-0.25;
tabSpeakerZ(18)=0.54;
tabSpeakerD(18)=0.68;
tabSpeakerX(19)=0;
tabSpeakerY(19)=-0.98;
tabSpeakerZ(19)=1;
tabSpeakerD(19)=1.40;
tabSpeakerX(20)=-0.58;
tabSpeakerY(20)=-0.98;
tabSpeakerZ(20)=0.84;
tabSpeakerD(20)=1.42;
tabSpeakerX(21)=-0.86;
tabSpeakerY(21)=-0.98;
tabSpeakerZ(21)=0.46;
tabSpeakerD(21)=1.38;
tabSpeakerX(22)=-1;
tabSpeakerY(22)=-0.98;
tabSpeakerZ(22)=0;
tabSpeakerD(22)=1.40;
tabSpeakerX(23)=-0.86;
tabSpeakerY(23)=-0.98;
tabSpeakerZ(23)=-0.45;
tabSpeakerD(23)=1.38;
tabSpeakerX(24)=-0.56;
tabSpeakerY(24)=-0.98;
tabSpeakerZ(24)=-0.79;
tabSpeakerD(24)=1.38;
tabSpeakerX(25)=-0.02;
tabSpeakerY(25)=-0.98;
tabSpeakerZ(25)=-1;
tabSpeakerD(25)=1.40;
tabSpeakerX(26)=0.48;
tabSpeakerY(26)=-0.98;
tabSpeakerZ(26)=-0.8;
tabSpeakerD(26)=1.35;
tabSpeakerX(27)=0.79;
tabSpeakerY(27)=-0.98;
tabSpeakerZ(27)=-0.45;
tabSpeakerD(27)=1.34;
tabSpeakerX(28)=1;
tabSpeakerY(28)=-0.98;
tabSpeakerZ(28)=0;
tabSpeakerD(28)=1.40;
tabSpeakerX(29)=0.78;
tabSpeakerY(29)=-0.98;
tabSpeakerZ(29)=0.48;
tabSpeakerD(29)=1.34;
tabSpeakerX(30)=0.46;
tabSpeakerY(30)=-0.98;
tabSpeakerZ(30)=0.84;
tabSpeakerD(30)=1.37;
dtencGen(in, out) = sqrt(pow(tabSpeakerX(out)-x(in),2) + pow(tabSpeakerY(out)+y(in),2) + pow(tabSpeakerZ(out)-z(in),2));
hspot = hslider("Hot Spot",-20,-50,0,1);
dgain(in, out) = ba.db2linear((hspot/tabSpeakerD(out))*dtencGen(in,out));
x(i) = hslider("/X%i",0,-1,1,0.01);
y(i) = hslider("/Y%i",0,-1,1,0.01);
z(i) = hslider("/Z%i",0,-1,1,0.01);
Fader(in,out)= vgroup("[1]Input %2in",dgain(in,out)*cdistance);
cdistance(in)=hslider("dt",1,0,1,0.1):si.smoo;
paramDistance(x)=hgroup("[2]Distance",x);
};
process =_,_:> Matrix(1,31);
