declare name        "micadome16";
declare version     "1.0";
declare author      "D.Blanchemain";
declare license     "BSD";
declare copyright   "(c)D.Blanchemain 2023";
import("stdfaust.lib");
Matrix(N,M) =_<: par(out, M, *(Fader(1,out): si.smoo)) :> par(out, M, _)
with {
tabSpeakerX(0)=-0.5;
tabSpeakerY(0)=-0.25;
tabSpeakerZ(0)=0.99;
tabSpeakerD(0)=1.14;
tabSpeakerX(1)=0.5;
tabSpeakerY(1)=-0.25;
tabSpeakerZ(1)=1;
tabSpeakerD(1)=1.15;
tabSpeakerX(2)=-1;
tabSpeakerY(2)=-0.25;
tabSpeakerZ(2)=0;
tabSpeakerD(2)=1.03;
tabSpeakerX(3)=1;
tabSpeakerY(3)=-0.25;
tabSpeakerZ(3)=0;
tabSpeakerD(3)=1.03;
tabSpeakerX(4)=-0.5;
tabSpeakerY(4)=-0.25;
tabSpeakerZ(4)=-1;
tabSpeakerD(4)=1.15;
tabSpeakerX(5)=0.5;
tabSpeakerY(5)=-0.25;
tabSpeakerZ(5)=-1;
tabSpeakerD(5)=1.15;
tabSpeakerX(6)=-0.65;
tabSpeakerY(6)=0.25;
tabSpeakerZ(6)=0.5;
tabSpeakerD(6)=0.86;
tabSpeakerX(7)=0.65;
tabSpeakerY(7)=0.25;
tabSpeakerZ(7)=0.5;
tabSpeakerD(7)=0.86;
tabSpeakerX(8)=-0.65;
tabSpeakerY(8)=0.25;
tabSpeakerZ(8)=-0.5;
tabSpeakerD(8)=0.86;
tabSpeakerX(9)=0.65;
tabSpeakerY(9)=0.25;
tabSpeakerZ(9)=-0.5;
tabSpeakerD(9)=0.86;
tabSpeakerX(10)=0;
tabSpeakerY(10)=0.25;
tabSpeakerZ(10)=1;
tabSpeakerD(10)=1.03;
tabSpeakerX(11)=0;
tabSpeakerY(11)=0.25;
tabSpeakerZ(11)=-1;
tabSpeakerD(11)=1.03;
tabSpeakerX(12)=0;
tabSpeakerY(12)=0.8;
tabSpeakerZ(12)=0.33;
tabSpeakerD(12)=0.87;
tabSpeakerX(13)=0;
tabSpeakerY(13)=0.8;
tabSpeakerZ(13)=-0.33;
tabSpeakerD(13)=0.87;
dtencGen(in, out) = sqrt(pow(tabSpeakerX(out)-x(in),2) + pow(tabSpeakerY(out)+y(in),2) + pow(tabSpeakerZ(out)-z(in),2));
hspot = hslider("Hot Spot",-20,-50,0,1);
dgain(in, out) = ba.db2linear((hspot/tabSpeakerD(out))*dtencGen(in,out));
x(i) = hslider("/X%i",0,-1,1,0.01);
y(i) = hslider("/Y%i",0,-1,1,0.01);
z(i) = hslider("/Z%i",0,-1,1,0.01);
Fader(in,out)= vgroup("[1]Input %2in",dgain(in,out)*cdistance);
cdistance(in)=hslider("dt",1,0,1,0.1):si.smoo;
paramDistance(x)=hgroup("[2]Distance",x);
};
process =_,_:> Matrix(1,14);
